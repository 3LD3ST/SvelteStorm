{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "FileDir.svelte",
    "FileTest.svelte",
    "Monaco.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n    //import Monaco from './components/monaco/monaco-editor.svelte';\r\n    import FileDir from './Directory/FileDir.svelte'\r\n    import Monaco from './Monaco.svelte'\r\n    import { FitAddon } from 'xterm-addon-fit'\r\n    import { onMount } from 'svelte';\r\n    import './xterm.css';\r\n    import DirectoryData from './Utilities/DirectoryStore';\r\n    const { remote, ipcRenderer } = require('electron');\r\n    const currentWindow = remote.getCurrentWindow();\r\n\r\n    const fs = require('fs');\r\n    const path = require('path')\r\n\r\n    const Terminal = require('xterm').Terminal\r\n\r\n    const fitAddon = new FitAddon();\r\n    const term = new Terminal({cursorBlink: true});\r\n    let counter =0;\r\n\r\n    export let orientation = 'columns';\r\n    export let monacoValue;\r\n\r\n\r\n    let readData = '';\r\n    const unsub = DirectoryData.subscribe(data =>{\r\n        console.log('File Directory Store Subscription');\r\n        console.log('data here',data)\r\n        if(data.fileRead){\r\n          readData = fs.readFileSync(data.openFilePath).toString();\r\n          console.log('PATH HERE', path.basename(data.openFilePath))\r\n          monacoValue = readData.split(/\\r?\\n/);\r\n          let title = 'Svelte Storm';\r\n          if (data.openFilePath) { title = `${path.basename(data.openFilePath)} - ${title}`; }\r\n          currentWindow.setTitle(title);\r\n          console.log(readData);\r\n          counter++;\r\n        }\r\n    });\r\n\r\n    onMount(() => {\r\n\t\tconsole.log('the component has mounted');\r\n        term.loadAddon(fitAddon);\r\n        term.open(document.getElementById('xterm'));\r\n        fitAddon.fit();\r\n        term.onData(e => {\r\n            ipcRenderer.send(\"terminal-into\", e);\r\n        } );\r\n        ipcRenderer.on('terminal-incData', (event, data) => {\r\n            term.write(data);\r\n        })\r\n    });\r\n\r\n    ipcRenderer.on('file-opened', function (evt, file, content) {\r\n        monacoValue = content.split(/\\r?\\n/);\r\n        counter++;\r\n        console.log(file)\r\n        let title = 'Svelte Storm';\r\n        if (file) { title = `${path.basename(file)} - ${title}`; }\r\n        currentWindow.setTitle(title);\r\n    });\r\n\r\n  </script>\r\n\r\n<style>\r\n  body {\r\n    height: 100%;\r\n    width: 100%\r\n  }\r\n  .wrapper {\r\n      height: 100%;\r\n      display: grid;\r\n      grid-gap: 10px;\r\n      grid-template-columns: repeat(5, 1fr);\r\n      grid-template-rows: repeat(5, 1fr);\r\n      background-color: #fff;\r\n      color: #444;\r\n    }\r\n\r\n    .box {\r\n      background-color: rgb(233, 217, 186);\r\n      color: rgb(226, 142, 45);\r\n      border-radius: 5px;\r\n      padding: 10px;\r\n      font-size: 150%;\r\n    }\r\n\r\n    .a {\r\n      grid-column: 1 ;\r\n      grid-row: 1 / 5;\r\n    }\r\n    .b {\r\n      grid-column: 2 / 4 ;\r\n      grid-row: 1 / 5;\r\n    }\r\n    .c {\r\n      grid-column: 1 / 3 ;\r\n      grid-row: 5 ;\r\n    }\r\n\r\n    .d {\r\n      grid-column: 4 / 6;\r\n      grid-row: 1 / 5;\r\n    }\r\n    .e {\r\n      grid-column: 3 / 6;\r\n      grid-row: 5;\r\n    }\r\n    .webpage {\r\n      height: 100%;\r\n      width: 100%;\r\n    }\r\n    iframe:focus {\r\n      outline: none;\r\n    }\r\n</style>\r\n\r\n    <body  class:orientation>\r\n    <main class=\"wrapper\" >\r\n        <div class=\"box a\">\r\n            <FileDir />\r\n        </div>\r\n        <div class=\"box b\">\r\n          {#if monacoValue}\r\n            <Monaco bind:value={monacoValue}/>\r\n          {:else}\r\n              <Monaco value={[]}/>\r\n          {/if}\r\n        </div>\r\n        <div class=\"box c\">\r\n            <h1>State Manager</h1>\r\n        </div>\r\n        <div class=\"box d\"> \r\n            <iframe class=\"webpage\" title=\"local host\" src=\"http://localhost:5000/\"></iframe>\r\n        </div>\r\n        <div class=\"box e\" > \r\n            <div id=\"xterm\">\r\n                \r\n            </div>\r\n        </div>\r\n    </main>\r\n    </body>\r\n  \r\n",
    "<script>  \r\n    import FileTest from './FileTest.svelte';    \r\n    import { onMount, onDestroy} from 'svelte';\r\n    import DirectoryData from '../Utilities/DirectoryStore';\r\n    let savedTree = [];\r\n    var remote = window.require('electron').remote;\r\n    var electronFs = remote.require('fs');\r\n    const {ipcRenderer} = require('electron');\r\n\r\n    \r\n    let directory;\r\n\r\n    const unsub = DirectoryData.subscribe(data =>{\r\n        console.log('File Directory Store Subscription');\r\n        console.log('data',data);\r\n    });\r\n\r\n    // store \r\n    onMount (()=>{\r\n        // console.log('Directory mounted')\r\n    });\r\n\r\n    onDestroy(()=>{\r\n        unsub();\r\n        // console.log('component destroyed');\r\n    });\r\n\r\n    ipcRenderer.on('folder-opened', function (evt, file, content) {\r\n        directory = content;\r\n        if (directory && directory[0]){        \r\n                var fileTree = new FileTree(directory[0]);        \r\n                fileTree.build();\r\n                \r\n                savedTree = fileTree.items;\r\n                savedTree.sort((a,b) => {\r\n                    return b.items.length - a.items.length;\r\n                })\r\n                DirectoryData.update(currentData =>{\r\n                    return savedTree;\r\n                })\r\n                //console.log(Array.isArray(savedTree))\r\n                console.log('fileTree',savedTree);\r\n            }\r\n    })\r\n\r\n    \r\n    class FileTree {\r\n        constructor(path, name = null){\r\n            \r\n            this.path = path;\r\n            this.name = name;\r\n            this.items = [];\r\n            this.state = {\r\n                path : path,\r\n                name: name,\r\n                items: [],\r\n                color : 'white',\r\n                isOpen : false\r\n            }   \r\n            //this.handleToggle = this.handleToggle.bind(this);\r\n            //console.log(this.state.isOpen)\r\n        }\r\n\r\n        //method to build file tree\r\n        build () {\r\n            this.items = FileTree.readDir(this.path,'',0);\r\n        }\r\n        static readDir(path) {\r\n            var fileArray = [];        \r\n            \r\n            electronFs.readdirSync(path).forEach(file => {\r\n                var fileInfo = new FileTree(`${path}/${file}`, file);\r\n                var stat = electronFs.statSync(fileInfo.path);\r\n\r\n                if (stat.isDirectory()){\r\n                    fileInfo.items = FileTree.readDir(fileInfo.path);\r\n                }\r\n\r\n                fileArray.push(fileInfo);\r\n            })   \r\n            return fileArray;\r\n        }\r\n    }\r\n\r\n</script>\r\n\r\n<!-- HTML -->\r\n\r\n<div class=directoryContainer>\r\n    <FileTest fileTree={savedTree} />\r\n</div>\r\n<!-- CSS -->\r\n<style>\r\n    .directoryContainer{\r\n        overflow: auto;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-content: flex-start;\r\n    }\r\n</style>",
    "<script>\r\n    export let fileTree;\r\n    import DirectoryData from '../Utilities/DirectoryStore';\r\n    const fileState = {};\r\n    \r\n    \r\n    const unsub = DirectoryData.subscribe(data =>{\r\n        console.log('File Directory Store Subscription');\r\n        console.log('data',data);\r\n    });\r\n\r\n    const toggleVisibility = (path) => {\r\n        if(!fileState[path]) fileState[path]= true;\r\n        else fileState[path] = false;\r\n        console.log('fileState',fileState);\r\n    }\r\n    console.log(fileTree)\r\n\r\n    const dblClickHandler = (path) => {\r\n        console.log(`clicking now on ${path}`);  \r\n        const openFilePath = path;      \r\n        DirectoryData.update(currentData =>{\r\n                    return {...currentData,openFilePath,fileRead:true};\r\n                })        \r\n        \r\n        \r\n    }\r\n\r\n</script>\r\n\r\n<div class=directory>\r\n{#if fileTree}\r\n{#each fileTree as {path,name, items}}\r\n<ul>\r\n    {#if items.length > 0}\r\n    <li on:click={toggleVisibility(path)} class={!fileState[path] ? \"liFolderClosed\" : \"liFolderOpen\"}>{name}</li>\r\n    {:else}\r\n    <li on:dblclick={dblClickHandler(path)} class=\"liFiles\">{name}</li>\r\n    {/if}\r\n    {#if fileState[path] && items.length > 0}\r\n      \r\n      <svelte:self fileTree={items.sort((a,b) => {\r\n        return b.items.length - a.items.length\r\n    })} />\r\n    {/if}\r\n</ul>\r\n{/each}\r\n{/if}\r\n</div>\r\n\r\n<style>\r\n    .liFolderClosed {\r\n        cursor: pointer;\r\n        padding: 0px 0 5px 25px;\r\n        list-style: none;\r\n        background-image: url(\"./img/folderClosed.svg\");\r\n        background-repeat: no-repeat;\r\n        background-position: left;\r\n        background-size: 20px;\r\n        /* border: 1px solid black; */\r\n    }\r\n    .liFolderOpen {\r\n        cursor: pointer;\r\n        display: flex;\r\n        justify-content: flex-start;\r\n        padding: 10px 0 5px 25px;\r\n        list-style: none;\r\n        background-image: url('./img/folderOpen.svg');\r\n        background-repeat: no-repeat;\r\n        background-position: left;\r\n        background-size: 20px;\r\n        /* border: 1px solid black; */\r\n    }\r\n    .liFiles {\r\n        cursor: pointer;\r\n        padding-left: 25px;\r\n        margin-left: 20px;\r\n        margin-top: 3px;\r\n        list-style: none;\r\n        background-image: url('./img/document.png');\r\n        background-repeat: no-repeat;\r\n        background-position: left;\r\n        background-size: 20px;\r\n        /* border: 1px solid blue; */\r\n    }\r\n    \r\n    .directory{\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: flex-start;\r\n        /* border:1px solid black; */\r\n    }\r\n</style>\r\n",
    "<script lang=\"ts\">\r\n\r\n    import { onMount } from 'svelte'\r\n    import * as monaco from 'monaco-editor/esm/vs/editor/editor.api'\r\n\r\n    export let value;\r\n    let containerElt;\r\n    onMount(() => {\r\n        console.log('inside monaco', value)\r\n         monaco.editor.create(containerElt, {\r\n           value: value.join('\\n'),\r\n           language: 'html',\r\n           theme:\"vs\"\r\n         })\r\n        })\r\n  </script>\r\n  \r\n  <style>\r\n    .monaco {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n  </style>\r\n  \r\n  <svelte:head />\r\n <div class=\"monaco\" bind:this={containerElt} />"
  ],
  "names": [],
  "mappings": "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"
}