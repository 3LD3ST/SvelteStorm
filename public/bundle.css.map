{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "src/App.svelte",
    "src/Directory/FileDir.svelte",
    "src/Directory/FileTest.svelte",
    "src/MonacoComponents/Monaco.svelte",
    "src/MonacoComponents/Tabs/Tab.svelte",
    "src/MonacoComponents/Tabs/TabList.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import FileDir from './Directory/FileDir.svelte'\n    import Monaco from './MonacoComponents/Monaco.svelte'\n    import { FitAddon } from 'xterm-addon-fit'\n    import { afterUpdate, onMount } from 'svelte';\n    import './xterm.css';\n    import DirectoryData from './Utilities/DirectoryStore';\n    import { Tabs, TabList, TabPanel, Tab } from './MonacoComponents/Tabs/tabs';\n    const fs = require('fs');\n\n    const {ipcRenderer} = require('electron');\n    const Terminal = require('xterm').Terminal\n\n    const fitAddon = new FitAddon();\n    const term = new Terminal();\n    let counter = 0;\n\n    export let orientation = 'columns';\n    export let monacoValue = [];\n    export let monacoLang = 'html';\n    let fileName;\n\n    let readData = '';\n    const unsub = DirectoryData.subscribe(data =>{\n        if(data.fileRead){\n          readData = fs.readFileSync(data.openFilePath).toString();\n          monacoValue = readData.split(/\\r?\\n/);\n          monacoLang = data.openFilePath.split('.').pop();\n          counter++;\n        }\n    });\n\n    onMount(() => {\n\t\t  console.log('the component has mounted');\n       term.setOption('cursorStyle', 'block');\n       term.setOption('cursorBlink', true);\n       term.setOption('fontSize', 14);\n       \n       term.loadAddon(fitAddon);\n        term.open(document.getElementById('xterm'));\n        fitAddon.fit();\n\n        term.write('\\x1b[32mWelcome to Svelte Storm!\\x1b[m\\r\\n');\n\n        term.onData(e => {\n            ipcRenderer.send(\"terminal-into\", e);\n        } );\n        ipcRenderer.on('terminal-incData', (event, data) => {\n            term.write(data);\n        })\n    });\n\n    \n      \n\n</script>\n\n<style>\n\n  body {\n    height: 100vh;\n    width: 100vw;\n  }\n\n  .wrapper {\n      height: 100%;\n      display: grid;\n      grid-gap: 1px;\n      grid-template-columns: repeat(5, 1fr);\n      grid-template-rows: repeat(5, 1fr);\n      background-color: #fff;\n      color: #444;\n  }\n\n  .box {\n    background-color: rgb(233, 217, 186);\n    color: rgb(226, 142, 45);\n    border-radius: 5px;\n    padding: 10px;\n    font-size: 150%;\n  }\n\n  .a {\n    grid-column: 1 ;\n    grid-row: 1 / 5;\n  }\n\n  .b {\n    grid-column: 2 / 4 ;\n    grid-row: 1 / 5;\n  }\n\n  .c {\n    grid-column: 1 / 3 ;\n    grid-row: 5 ;\n  }\n\n  .d {\n    grid-column: 4 / 6;\n    grid-row: 1 / 5;\n  }\n\n  .e {\n    grid-column: 3 / 6;\n    grid-row: 5;\n  }\n\n  .webpage {\n    height: 100%;\n    width: 100%;\n  }\n\n  iframe:focus {\n    outline: none;\n  }\n  \n  \n</style>\n\n  <body class:orientation>\n  <main class=\"wrapper\" >\n      <div class=\"box a\">\n          <FileDir />\n      </div>\n      <div class=\"box b\">\n        <Tabs class=\"tabs\">\n          <TabList>\n            <Tab>{monacoLang}</Tab>\n            <!-- <Tab>two</Tab>\n            <Tab>three</Tab> -->\n          </TabList>\n        \n          <TabPanel>\n            <Monaco bind:value={monacoValue} bind:language={monacoLang} />\n          </TabPanel>\n        \n          <!-- <TabPanel>\n            <h2>Second panel</h2>\n          </TabPanel>\n        \n          <TabPanel>\n            <h2>Third panel</h2>\n          </TabPanel> -->\n        \n        </Tabs>\n        <!-- {#if monacoValue} -->\n          <!-- <Monaco bind:value={monacoValue} bind:language={monacoLang} /> -->\n        <!-- {:else}\n            <Monaco value={[]}/>\n        {/if} -->\n        </div>\n      <div class=\"box c\">\n          <h1>State Manager</h1>\n      </div>\n      <div class=\"box d\"> \n          <iframe class=\"webpage\" title=\"local host\" src=\"http://localhost:5000/\"></iframe>\n      </div>\n      <div class=\"box e\" > \n          <div id=\"xterm\">\n              \n          </div>\n      </div>\n  </main>\n  </body>\n\n",
    "<script>  \n    import FileTest from './FileTest.svelte';    \n    import { onMount, onDestroy} from 'svelte';\n    import DirectoryData from '../Utilities/DirectoryStore';\n    let savedTree = [];\n    var remote = window.require('electron').remote;\n    var electronFs = remote.require('fs');\n    const {ipcRenderer} = require('electron');\n\n    \n    let directory;\n\n    const unsub = DirectoryData.subscribe(data =>{\n        console.log('File Directory Store Subscription');\n        console.log('data',data);\n    });\n\n    // store \n    onMount (()=>{\n        // console.log('Directory mounted')\n    });\n\n    onDestroy(()=>{\n        unsub();\n        // console.log('component destroyed');\n    });\n\n    ipcRenderer.on('folder-opened', function (evt, file, content) {\n        directory = content;\n        if (directory && directory[0]){        \n                var fileTree = new FileTree(directory[0]);        \n                fileTree.build();\n                \n                savedTree = fileTree.items;\n                savedTree.sort((a,b) => {\n                    return b.items.length - a.items.length;\n                })\n                DirectoryData.update(currentData =>{\n                    return savedTree;\n                })\n                //console.log(Array.isArray(savedTree))\n                console.log('fileTree',savedTree);\n            }\n    })\n\n    \n    class FileTree {\n        constructor(path, name = null){\n            \n            this.path = path;\n            this.name = name;\n            this.items = [];\n            this.state = {\n                path : path,\n                name: name,\n                items: [],\n                color : 'white',\n                isOpen : false\n            }   \n            //this.handleToggle = this.handleToggle.bind(this);\n            //console.log(this.state.isOpen)\n        }\n\n        //method to build file tree\n        build () {\n            this.items = FileTree.readDir(this.path,'',0);\n        }\n        static readDir(path) {\n            var fileArray = [];        \n            \n            electronFs.readdirSync(path).forEach(file => {\n                var fileInfo = new FileTree(`${path}/${file}`, file);\n                var stat = electronFs.statSync(fileInfo.path);\n\n                if (stat.isDirectory()){\n                    fileInfo.items = FileTree.readDir(fileInfo.path);\n                }\n\n                fileArray.push(fileInfo);\n            })   \n            return fileArray;\n        }\n    }\n\n</script>\n\n<!-- HTML -->\n\n<div class=directoryContainer>\n    <FileTest fileTree={savedTree} />\n</div>\n<!-- CSS -->\n<style>\n    .directoryContainer{\n        max-height: 50vh;\n        overflow-y: scroll;\n        display: flex;\n        flex-direction: column;\n        align-content: flex-start;\n    }\n    .directoryContainer::-webkit-scrollbar {\n    width: 12px;\n}\n\n.directoryContainer::-webkit-scrollbar-track:hover {\n    -webkit-box-shadow: inset 0 0 3px rgba(0, 0, 0, 0.3); \n    /* border-radius: 0px; */\n}\n\n.directoryContainer::-webkit-scrollbar-thumb:hover {\n    /* border-radius: 10px; */\n    background-color: #e28e2d;\n    transition: background-color 2s ease-in-out;\n    /* animation: fadeIn 5s; */\n    /* -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.5);  */\n}\n</style>\n",
    "<script>\n    export let fileTree;\n    import DirectoryData from '../Utilities/DirectoryStore';\n    const fileState = {};\n    \n    \n    const unsub = DirectoryData.subscribe(data =>{\n        console.log('File Directory Store Subscription');\n        console.log('data',data);\n    });\n\n    const toggleVisibility = (path) => {\n        if(!fileState[path]) fileState[path]= true;\n        else fileState[path] = false;\n        console.log('fileState',fileState);\n    }\n    console.log(fileTree)\n\n    const dblClickHandler = (path) => {\n        console.log(`clicking now on ${path}`);  \n        const openFilePath = path;      \n        DirectoryData.update(currentData =>{\n                    return {...currentData,openFilePath,fileRead:true};\n                })        \n    }\n\n</script>\n\n<div class=directory>\n{#if fileTree}\n{#each fileTree as {path,name, items}}\n<ul>\n    {#if items.length > 0}\n    <li on:click={toggleVisibility(path)} class={!fileState[path] ? \"liFolderClosed\" : \"liFolderOpen\"}>{name}</li>\n    {:else}\n    <li on:dblclick={dblClickHandler(path)} class=\"liFiles\">{name}</li>\n    {/if}\n    {#if fileState[path] && items.length > 0}\n      \n      <svelte:self fileTree={items.sort((a,b) => {\n        return b.items.length - a.items.length\n    })} />\n    {/if}\n</ul>\n{/each}\n{/if}\n</div>\n\n<style>\n    \n    .liFolderClosed {\n        font-size: 15px;\n        cursor: pointer;\n        padding: 0px 0 5px 25px;\n        list-style: none;\n        background-image: url(\"./img/folderClosed.svg\");\n        background-repeat: no-repeat;\n        background-position: left;\n        background-size: 15px;\n        /* border: 1px solid black; */\n    }\n\n    .liFolderOpen {\n        font-size: 15px;\n        cursor: pointer;\n        display: flex;\n        justify-content: flex-start;\n        padding: 10px 0 5px 25px;\n        list-style: none;\n        background-image: url('./img/folderOpen.svg');\n        background-repeat: no-repeat;\n        background-position: left;\n        background-size: 15px;\n        /* border: 1px solid black; */\n    }\n\n    .liFiles {\n        font-size: 15px;\n        cursor: pointer;\n        padding-left: 25px;\n        margin-left: 20px;\n        margin-top: 1px;\n        list-style: none;\n        background-image: url('./img/document.png');\n        background-repeat: no-repeat;\n        background-position: left;\n        background-size: 15px;\n        /* border: 1px solid blue; */\n    }\n    \n    .directory{\n        display: flex;\n        flex-direction: column;\n        align-items: flex-start;\n        /* border:1px solid black; */\n    }\n\n    ul{\n        padding-left: 10px;\n        margin: 5px;\n    }\n</style>\n",
    "<script>\n  import {  afterUpdate, onMount } from 'svelte'\n  // import * as monaco from 'monaco-editor/esm/vs/editor/editor.api'\n  import * as monaco from 'monaco-editor';\n  const {ipcRenderer} = require('electron');\n  \n  // export const value;\n  // export const language;\n  let containerElt;\n  export let monacoValue;\n  export let monacoLang;\n\n  ipcRenderer.on('file-opened', function (evt, file, content) {\n      monacoValue = content.split(/\\r?\\n/);\n      monacoLang = file.split('.').pop();\n      console.log(monacoValue, monacoLang)\n  });\n \n  const getLanguage = (lang) => {\n      switch (lang) {\n        case 'js':\n          return 'javascript';\n        case 'jsx':\n          return 'javascript';\n        case 'ts':\n          return 'typescript';\n        case 'json':\n          return 'json';\n        case 'css':\n          return 'css';\n        case 'html':\n          return 'html';\n        case 'md':\n          return 'markdown';\n        case 'svelte':\n          return 'html';\n        default:\n          return undefined;\n      }\n  };\n\n  afterUpdate(() => {\n    monaco.editor.create(containerElt, {\n      value: monacoValue ? monacoValue.join('\\n') : '[]',\n      language: monacoLang ? getLanguage(monacoLang) : 'html',\n      theme: 'vs-dark',\n      // model: monaco.editor.createModel(this.getAttribute(\"value\"), this.getAttribute(\"language\")),\n      wordWrap: 'on',\n    })\n  })\n\n</script>\n  \n<style>\n  .monaco {\n    position: relative;\n    width: 100%;\n    height: auto;\n  }\n</style>\n\n<svelte:head />\n<div class=\"monaco\" bind:this={containerElt} />\n",
    "<script>\n\timport { getContext } from 'svelte';\n\timport { TABS } from './Tabs.svelte';\n\n\tconst tab = {};\n\tconst { registerTab, selectTab, selectedTab } = getContext(TABS);\n\n\tregisterTab(tab);\n</script>\n\n<style>\n\tbutton {\n\t\tbackground: none;\n\t\tborder: none;\n\t\tborder-bottom: 2px solid white;\n\t\tborder-radius: 0;\n\t\tmargin: 0;\n\t\tcolor: #ccc;\n\t}\n\t\n\t.selected {\n\t\tborder-bottom: 2px solid teal;\n\t\tcolor: #333;\n\t}\n</style>\n\n<button class:selected=\"{$selectedTab === tab}\" on:click=\"{() => selectTab(tab)}\">\n\t<slot></slot>\n</button>",
    "<div class=\"tab-list\">\n\t<slot></slot>\n</div>\n\n<style>\n\t.tab-list {\n\t\tborder-bottom: 1px solid teal;\n\t}\n</style>"
  ],
  "names": [],
  "mappings": "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"
}