{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "FileDir.svelte",
    "FileTest.svelte",
    "Monaco.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n    //import Monaco from './components/monaco/monaco-editor.svelte';\r\n    import FileDir from './Directory/FileDir.svelte'\r\n    import Monaco from './MonacoComponents/Monaco.svelte'\r\n    import { FitAddon } from 'xterm-addon-fit'\r\n    import { onMount } from 'svelte';\r\n    import './xterm.css';\r\n    import DirectoryData from './Utilities/DirectoryStore';\r\n    export let orientation = 'columns';\r\n    export let monacoValue;\r\n    export let monacoLang;\r\n\r\n    const { remote, ipcRenderer } = require('electron');\r\n    const currentWindow = remote.getCurrentWindow();\r\n\r\n    const fs = require('fs');\r\n    const path = require('path')\r\n\r\n    const Terminal = require('xterm').Terminal\r\n\r\n    const fitAddon = new FitAddon();\r\n    const term = new Terminal();\r\n    let counter = 0;\r\n\r\n    let readData = '';\r\n    const unsub = DirectoryData.subscribe(data =>{\r\n        if(data.fileRead){\r\n          readData = fs.readFileSync(data.openFilePath).toString();\r\n          monacoValue = readData.split(/\\r?\\n/);\r\n          monacoLang = path.basename(data.openFilePath).split('.').pop()\r\n          let title = 'Svelte Storm';\r\n          if (data.openFilePath) { title = `${path.basename(data.openFilePath)} - ${title}`; }\r\n          currentWindow.setTitle(title);\r\n          counter++;\r\n        }\r\n    });\r\n\r\n    onMount(() => {\r\n\t\t  console.log('the component has mounted');\r\n       term.setOption('cursorStyle', 'block');\r\n       term.setOption('cursorBlink', true);\r\n       term.setOption('fontSize', 14);\r\n       \r\n       term.loadAddon(fitAddon);\r\n        term.open(document.getElementById('xterm'));\r\n        fitAddon.fit();\r\n\r\n        term.write('\\x1b[32mWelcome to Svelte Storm!\\x1b[m\\r\\n');\r\n\r\n        term.onData(e => {\r\n            ipcRenderer.send(\"terminal-into\", e);\r\n        });\r\n        ipcRenderer.on('terminal-incData', (event, data) => {\r\n            term.write(data);\r\n        })\r\n    });\r\n\r\n    ipcRenderer.on('file-opened', function (evt, file, content) {\r\n        monacoValue = content.split(/\\r?\\n/);\r\n        monacoLang = file.split('.').pop();\r\n        counter++;\r\n        let title = 'Svelte Storm';\r\n        if (file) { title = `${path.basename(file)} - ${title}`; }\r\n        currentWindow.setTitle(title);\r\n    });\r\n\r\n  </script>\r\n  <style>\r\n\r\n  body {\r\n    height: 100vh;\r\n    width: 100vw;\r\n  }\r\n\r\n  .wrapper {\r\n      height: 100%;\r\n      display: grid;\r\n      grid-gap: 1px;\r\n      grid-template-columns: repeat(5, 1fr);\r\n      grid-template-rows: repeat(5, 1fr);\r\n      background-color: #fff;\r\n      color: #444;\r\n  }\r\n\r\n      .box {\r\n        background-color: rgb(233, 217, 186);\r\n        color: rgb(226, 142, 45);\r\n        border-radius: 5px;\r\n        padding: 10px;\r\n        font-size: 150%;\r\n      }\r\n\r\n  .a {\r\n    grid-column: 1 ;\r\n    grid-row: 1 / 5;\r\n  }\r\n\r\n  .b {\r\n    grid-column: 2 / 4 ;\r\n    grid-row: 1 / 5;\r\n  }\r\n\r\n  .c {\r\n    grid-column: 1 / 3 ;\r\n    grid-row: 5 ;\r\n  }\r\n\r\n  .d {\r\n    grid-column: 4 / 6;\r\n    grid-row: 1 / 5;\r\n  }\r\n\r\n  .e {\r\n    grid-column: 3 / 6;\r\n    grid-row: 5;\r\n  }\r\n\r\n  .webpage {\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n\r\n  iframe:focus {\r\n    outline: none;\r\n  }\r\n\r\n</style>\r\n\r\n  <body class:orientation>\r\n  <main class=\"wrapper\" >\r\n      <div class=\"box a\">\r\n          <FileDir />\r\n      </div>\r\n      <div class=\"box b\">\r\n        {#if monacoValue}\r\n          <Monaco bind:value={monacoValue} bind:language={monacoLang} />\r\n        {:else}\r\n            <Monaco value={[]}/>\r\n        {/if}\r\n      </div>\r\n      <div class=\"box c\">\r\n          <h1>State Manager</h1>\r\n      </div>\r\n      <div class=\"box d\"> \r\n          <iframe class=\"webpage\" title=\"local host\" src=\"http://localhost:5000/\"></iframe>\r\n      </div>\r\n      <div class=\"box e\" > \r\n          <div id=\"xterm\">\r\n              \r\n          </div>\r\n      </div>\r\n  </main>\r\n  </body>\r\n\r\n",
    "<script>  \r\n    import FileTest from './FileTest.svelte';    \r\n    import { onMount, onDestroy} from 'svelte';\r\n    import DirectoryData from '../Utilities/DirectoryStore';\r\n    let savedTree = [];\r\n    var remote = window.require('electron').remote;\r\n    var electronFs = remote.require('fs');\r\n    const {ipcRenderer} = require('electron');\r\n\r\n    \r\n    let directory;\r\n\r\n    const unsub = DirectoryData.subscribe(data =>{\r\n        console.log('File Directory Store Subscription');\r\n        console.log('data',data);\r\n    });\r\n\r\n    // store \r\n    onMount (()=>{\r\n        // console.log('Directory mounted')\r\n    });\r\n\r\n    onDestroy(()=>{\r\n        unsub();\r\n        // console.log('component destroyed');\r\n    });\r\n\r\n    ipcRenderer.on('folder-opened', function (evt, file, content) {\r\n        directory = content;\r\n        if (directory && directory[0]){        \r\n                var fileTree = new FileTree(directory[0]);        \r\n                fileTree.build();\r\n                \r\n                savedTree = fileTree.items;\r\n                savedTree.sort((a,b) => {\r\n                    return b.items.length - a.items.length;\r\n                })\r\n                DirectoryData.update(currentData =>{\r\n                    return savedTree;\r\n                })\r\n                //console.log(Array.isArray(savedTree))\r\n                console.log('fileTree',savedTree);\r\n            }\r\n    })\r\n\r\n    \r\n    class FileTree {\r\n        constructor(path, name = null){\r\n            \r\n            this.path = path;\r\n            this.name = name;\r\n            this.items = [];\r\n            this.state = {\r\n                path : path,\r\n                name: name,\r\n                items: [],\r\n                color : 'white',\r\n                isOpen : false\r\n            }   \r\n            //this.handleToggle = this.handleToggle.bind(this);\r\n            //console.log(this.state.isOpen)\r\n        }\r\n\r\n        //method to build file tree\r\n        build () {\r\n            this.items = FileTree.readDir(this.path,'',0);\r\n        }\r\n        static readDir(path) {\r\n            var fileArray = [];        \r\n            \r\n            electronFs.readdirSync(path).forEach(file => {\r\n                var fileInfo = new FileTree(`${path}/${file}`, file);\r\n                var stat = electronFs.statSync(fileInfo.path);\r\n\r\n                if (stat.isDirectory()){\r\n                    fileInfo.items = FileTree.readDir(fileInfo.path);\r\n                }\r\n\r\n                fileArray.push(fileInfo);\r\n            })   \r\n            return fileArray;\r\n        }\r\n    }\r\n\r\n</script>\r\n\r\n<!-- HTML -->\r\n\r\n<div class=directoryContainer>\r\n    <FileTest fileTree={savedTree} />\r\n</div>\r\n<!-- CSS -->\r\n<style>\r\n    .directoryContainer{\r\n        max-height: 50vh;\r\n        overflow-y: scroll;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-content: flex-start;\r\n    }\r\n    .directoryContainer::-webkit-scrollbar {\r\n    width: 12px;\r\n}\r\n\r\n.directoryContainer::-webkit-scrollbar-track:hover {\r\n    -webkit-box-shadow: inset 0 0 3px rgba(0, 0, 0, 0.3); \r\n    /* border-radius: 0px; */\r\n}\r\n\r\n.directoryContainer::-webkit-scrollbar-thumb:hover {\r\n    /* border-radius: 10px; */\r\n    background-color: #e28e2d;\r\n    transition: background-color 2s ease-in-out;\r\n    /* animation: fadeIn 5s; */\r\n    /* -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.5);  */\r\n}\r\n</style>\r\n",
    "<script>\r\n    export let fileTree;\r\n    import DirectoryData from '../Utilities/DirectoryStore';\r\n    const fileState = {};\r\n    \r\n    \r\n    const unsub = DirectoryData.subscribe(data =>{\r\n        console.log('File Directory Store Subscription');\r\n        console.log('data',data);\r\n    });\r\n\r\n    const toggleVisibility = (path) => {\r\n        if(!fileState[path]) fileState[path]= true;\r\n        else fileState[path] = false;\r\n        console.log('fileState',fileState);\r\n    }\r\n    console.log(fileTree)\r\n\r\n    const dblClickHandler = (path) => {\r\n        console.log(`clicking now on ${path}`);  \r\n        const openFilePath = path;      \r\n        DirectoryData.update(currentData =>{\r\n                    return {...currentData,openFilePath,fileRead:true};\r\n                })        \r\n    }\r\n\r\n</script>\r\n\r\n<div class=directory>\r\n{#if fileTree}\r\n{#each fileTree as {path,name, items}}\r\n<ul>\r\n    {#if items.length > 0}\r\n    <li on:click={toggleVisibility(path)} class={!fileState[path] ? \"liFolderClosed\" : \"liFolderOpen\"}>{name}</li>\r\n    {:else}\r\n    <li on:dblclick={dblClickHandler(path)} class=\"liFiles\">{name}</li>\r\n    {/if}\r\n    {#if fileState[path] && items.length > 0}\r\n      \r\n      <svelte:self fileTree={items.sort((a,b) => {\r\n        return b.items.length - a.items.length\r\n    })} />\r\n    {/if}\r\n</ul>\r\n{/each}\r\n{/if}\r\n</div>\r\n\r\n<style>\r\n    \r\n    .liFolderClosed {\r\n        font-size: 15px;\r\n        cursor: pointer;\r\n        padding: 0px 0 5px 25px;\r\n        list-style: none;\r\n        background-image: url(\"./img/folderClosed.svg\");\r\n        background-repeat: no-repeat;\r\n        background-position: left;\r\n        background-size: 15px;\r\n        /* border: 1px solid black; */\r\n    }\r\n\r\n    .liFolderOpen {\r\n        font-size: 15px;\r\n        cursor: pointer;\r\n        display: flex;\r\n        justify-content: flex-start;\r\n        padding: 10px 0 5px 25px;\r\n        list-style: none;\r\n        background-image: url('./img/folderOpen.svg');\r\n        background-repeat: no-repeat;\r\n        background-position: left;\r\n        background-size: 15px;\r\n        /* border: 1px solid black; */\r\n    }\r\n\r\n    .liFiles {\r\n        font-size: 15px;\r\n        cursor: pointer;\r\n        padding-left: 25px;\r\n        margin-left: 20px;\r\n        margin-top: 1px;\r\n        list-style: none;\r\n        background-image: url('./img/document.png');\r\n        background-repeat: no-repeat;\r\n        background-position: left;\r\n        background-size: 15px;\r\n        /* border: 1px solid blue; */\r\n    }\r\n    \r\n    .directory{\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: flex-start;\r\n        /* border:1px solid black; */\r\n    }\r\n\r\n    ul{\r\n        padding-left: 10px;\r\n        margin: 5px;\r\n    }\r\n</style>\r\n",
    "<script>\r\n  import {  onMount, beforeUpdate, afterUpdate } from 'svelte'\r\n  // import * as monaco from 'monaco-editor/esm/vs/editor/editor.api'\r\n  import * as monaco from 'monaco-editor';\r\n  const { ipcRenderer } = require('electron');\r\n  // const path = window.require('path');\r\n  // const fs = window.require('fs');\r\n  \r\n  export let value;\r\n  export let language;\r\n  let monEditor;\r\n  let containerElt;\r\n \r\n\r\n  const getLanguage = (lang) => {\r\n    console.log(lang)\r\n      switch (lang) {\r\n        case 'js':\r\n          return 'javascript';\r\n        case 'jsx':\r\n          return 'javascript';\r\n        case 'ts':\r\n          return 'typescript';\r\n        case 'json':\r\n          return 'json';\r\n        case 'css':\r\n          return 'css';\r\n        case 'html':\r\n          return 'html';\r\n        case 'md':\r\n          return 'markdown';\r\n        case 'svelte':\r\n          return 'html';\r\n        default:\r\n          return undefined;\r\n      }\r\n\r\n    };\r\n\r\n    const createEditor = () => {\r\n\r\n      monEditor = monaco.editor.create(containerElt, {\r\n        value: value.join('\\n'),\r\n        language: getLanguage(language),\r\n        theme: 'vs-dark',\r\n        wordWrap: 'on',\r\n      })\r\n\r\n    }\r\n\r\n    onMount(() => {\r\n        createEditor()\r\n    })\r\n        \r\n\tafterUpdate(() => {\r\n    if(monEditor) {\r\n          monEditor.onDidChangeModelContent(() => {\r\n          console.log(monEditor.getValue())\r\n        })\r\n      }\r\n\t});\r\n\r\n  ipcRenderer.on('save-markdown',  function (file, content) {\r\n      ipcRenderer.send('synchronous-message', monEditor.getValue())\r\n    });\r\n</script>\r\n  \r\n<style>\r\n  .monaco {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n</style>\r\n\r\n<svelte:head />\r\n<div class=\"monaco\" bind:this={containerElt} />\r\n\r\n  "
  ],
  "names": [],
  "mappings": "AAqEE,IAAI,eAAC,CAAC,AACJ,MAAM,CAAE,KAAK,CACb,KAAK,CAAE,KAAK,AACd,CAAC,AAED,QAAQ,eAAC,CAAC,AACN,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,QAAQ,CAAE,GAAG,CACb,qBAAqB,CAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CACrC,kBAAkB,CAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAClC,gBAAgB,CAAE,IAAI,CACtB,KAAK,CAAE,IAAI,AACf,CAAC,AAEG,IAAI,eAAC,CAAC,AACJ,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACpC,KAAK,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CACxB,aAAa,CAAE,GAAG,CAClB,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,IAAI,AACjB,CAAC,AAEL,EAAE,eAAC,CAAC,AACF,WAAW,CAAE,CAAC,CAAC,CACf,QAAQ,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC,AACjB,CAAC,AAED,EAAE,eAAC,CAAC,AACF,WAAW,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACnB,QAAQ,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC,AACjB,CAAC,AAED,EAAE,eAAC,CAAC,AACF,WAAW,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACnB,QAAQ,CAAE,CAAC,CAAC,AACd,CAAC,AAED,EAAE,eAAC,CAAC,AACF,WAAW,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAClB,QAAQ,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC,AACjB,CAAC,AAED,EAAE,eAAC,CAAC,AACF,WAAW,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAClB,QAAQ,CAAE,CAAC,AACb,CAAC,AAED,QAAQ,eAAC,CAAC,AACR,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,AACb,CAAC,AAED,qBAAM,MAAM,AAAC,CAAC,AACZ,OAAO,CAAE,IAAI,AACf,CAAC;AC/BC,kCAAmB,CAAC,AAChB,UAAU,CAAE,IAAI,CAChB,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,aAAa,CAAE,UAAU,AAC7B,CAAC,AACD,kCAAmB,mBAAmB,AAAC,CAAC,AACxC,KAAK,CAAE,IAAI,AACf,CAAC,AAED,kCAAmB,yBAAyB,MAAM,AAAC,CAAC,AAChD,kBAAkB,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,AAExD,CAAC,AAED,kCAAmB,yBAAyB,MAAM,AAAC,CAAC,AAEhD,gBAAgB,CAAE,OAAO,CACzB,UAAU,CAAE,gBAAgB,CAAC,EAAE,CAAC,WAAW,AAG/C,CAAC;ACjEG,eAAe,eAAC,CAAC,AACb,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,OAAO,CACf,OAAO,CAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CACvB,UAAU,CAAE,IAAI,CAChB,gBAAgB,CAAE,IAAI,wBAAwB,CAAC,CAC/C,iBAAiB,CAAE,SAAS,CAC5B,mBAAmB,CAAE,IAAI,CACzB,eAAe,CAAE,IAAI,AAEzB,CAAC,AAED,aAAa,eAAC,CAAC,AACX,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,OAAO,CACf,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,UAAU,CAC3B,OAAO,CAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CACxB,UAAU,CAAE,IAAI,CAChB,gBAAgB,CAAE,IAAI,sBAAsB,CAAC,CAC7C,iBAAiB,CAAE,SAAS,CAC5B,mBAAmB,CAAE,IAAI,CACzB,eAAe,CAAE,IAAI,AAEzB,CAAC,AAED,QAAQ,eAAC,CAAC,AACN,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,OAAO,CACf,YAAY,CAAE,IAAI,CAClB,WAAW,CAAE,IAAI,CACjB,UAAU,CAAE,GAAG,CACf,UAAU,CAAE,IAAI,CAChB,gBAAgB,CAAE,IAAI,oBAAoB,CAAC,CAC3C,iBAAiB,CAAE,SAAS,CAC5B,mBAAmB,CAAE,IAAI,CACzB,eAAe,CAAE,IAAI,AAEzB,CAAC,AAED,yBAAU,CAAC,AACP,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,UAAU,AAE3B,CAAC,AAED,iBAAE,CAAC,AACC,YAAY,CAAE,IAAI,CAClB,MAAM,CAAE,GAAG,AACf,CAAC;AChCH,OAAO,eAAC,CAAC,AACP,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AACd,CAAC"
}