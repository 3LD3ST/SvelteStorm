body.svelte-nh4to6.svelte-nh4to6{height:100%;width:100%}.wrapper.svelte-nh4to6.svelte-nh4to6{height:100%;display:grid;border:1px solid rgb(226, 142, 45);grid-gap:1px;grid-template-columns:min-content;grid-template-rows:1fr;background-color:rgb(248, 246, 246);color:#444}.box.svelte-nh4to6.svelte-nh4to6{background-color:rgb(233, 217, 186);color:rgb(226, 142, 45);border-radius:0px;padding:10px;font-size:150%}.a.svelte-nh4to6.svelte-nh4to6{overflow:auto;resize:horizontal;min-width:15%;max-width:150%;min-height:10%;max-height:150%;grid-column:1 ;grid-row:1}.b.svelte-nh4to6.svelte-nh4to6{overflow:scroll;min-width:10%;max-width:150%;min-height:10%;max-height:150%;grid-column:2;grid-row:1}.c.svelte-nh4to6.svelte-nh4to6{overflow:auto;min-width:10%;max-width:150%;min-height:10%;max-height:150%;grid-column:1 ;grid-row:2 }.d.svelte-nh4to6.svelte-nh4to6{overflow:auto;resize:vertical;min-width:10%;min-height:10%;max-height:150%;padding:0px;text-align:center;grid-column:3;grid-row:1}.d.svelte-nh4to6 input.svelte-nh4to6{margin:auto;margin-top:0;margin-bottom:0;height:20px;font-size:15px}.e.svelte-nh4to6.svelte-nh4to6{overflow:auto;min-width:10%;max-width:150%;min-height:100%;grid-column:2 / 4;grid-row:2}.webpage.svelte-nh4to6.svelte-nh4to6{height:90%;width:95%}.b.svelte-nh4to6 .childClass{overflow:scroll;display:flex;height:100%;width:100%}iframe.svelte-nh4to6.svelte-nh4to6:focus{outline:none}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXBwLnN2ZWx0ZSIsInNvdXJjZXMiOlsiQXBwLnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyI8c2NyaXB0PlxyXG4gICAgaW1wb3J0IEZpbGVEaXIgZnJvbSAnLi9EaXJlY3RvcnkvRmlsZURpci5zdmVsdGUnXHJcbiAgICBpbXBvcnQgTmV3VGFicyBmcm9tICcuL01vbmFjb0NvbXBvbmVudHMvVGFicy9OZXdUYWJzLnN2ZWx0ZSc7XHJcbiAgICBpbXBvcnQgWFRlcm0gZnJvbSAnLi9YVGVybS5zdmVsdGUnO1xyXG4gICAgaW1wb3J0IFN0YXRlTWFuYWdlciBmcm9tICcuL1N0YXRlTWFuYWdlci9TdGF0ZU1hbmFnZXIuc3ZlbHRlJ1xyXG5cclxuICAgIGV4cG9ydCBsZXQgb3JpZW50YXRpb24gPSAnY29sdW1ucyc7XHJcbiAgICBleHBvcnQgbGV0IGxvY2FsaG9zdDtcclxuXHJcbiAgbGV0IHZhbHVlID0gXCJcIlxyXG5cdGxldCBzdWJtaXQgPSBmYWxzZVxyXG4gIFxyXG5cdFxyXG5cdGNvbnN0IGhhbmRsZVN1Ym1pdCA9ICgpID0+IHtcclxuXHRcdHN1Ym1pdCA9IGZhbHNlXHJcbiAgICByZXR1cm4gZmFsc2VcclxuXHR9XHJcblx0XHJcblx0Y29uc3QgaGFuZGxlS2V5dXAgPSAoKSA9PiB7XHJcblx0XHRzdWJtaXQgPSBmYWxzZVxyXG5cdFx0XHJcblx0XHRpZiAoZXZlbnQuY29kZSA9PSAnRW50ZXInKSB7XHJcblx0XHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KClcclxuXHRcdFx0ZXZlbnQudGFyZ2V0LnZhbHVlXHJcblx0XHRcdHZhbHVlID0gZXZlbnQudGFyZ2V0LnZhbHVlXHJcbiAgICAgIGxvY2FsaG9zdCA9IGBodHRwOi8vMTI3LjAuMC4xOiR7dmFsdWV9L2BcclxuXHRcdFx0cmV0dXJuIGZhbHNlXHJcblx0XHR9XHJcblx0fVxyXG5cclxuICBsZXQgdGFicyA9IFtdXHJcblxyXG4gIGNvbnNvbGUubG9nKGxvY2FsaG9zdClcclxuXHJcbiAgPC9zY3JpcHQ+XHJcbiAgXHJcbiAgPHN0eWxlPlxyXG4gIFxyXG4gIGJvZHkge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG5cclxuICAud3JhcHBlciB7XHJcbiAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgYm9yZGVyOiAxcHggc29saWQgcmdiKDIyNiwgMTQyLCA0NSk7XHJcbiAgICAgIGdyaWQtZ2FwOiAxcHg7XHJcbiAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogbWluLWNvbnRlbnQ7XHJcbiAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogMWZyO1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjQ4LCAyNDYsIDI0Nik7XHJcbiAgICAgIGNvbG9yOiAjNDQ0O1xyXG4gIH1cclxuICBcclxuICAuYm94IHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyMzMsIDIxNywgMTg2KTtcclxuICAgIGNvbG9yOiByZ2IoMjI2LCAxNDIsIDQ1KTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDBweDtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBmb250LXNpemU6IDE1MCU7XHJcbiAgfVxyXG5cclxuICAuYSB7XHJcbiAgICBvdmVyZmxvdzogYXV0bztcclxuICAgIHJlc2l6ZTogaG9yaXpvbnRhbDtcclxuICAgIG1pbi13aWR0aDogMTUlO1xyXG4gICAgbWF4LXdpZHRoOiAxNTAlO1xyXG4gICAgbWluLWhlaWdodDogMTAlO1xyXG4gICAgbWF4LWhlaWdodDogMTUwJTtcclxuICAgIGdyaWQtY29sdW1uOiAxIDtcclxuICAgIGdyaWQtcm93OiAxO1xyXG4gIH1cclxuICBcclxuICAuYiB7XHJcbiAgICBvdmVyZmxvdzogc2Nyb2xsO1xyXG4gICAgbWluLXdpZHRoOiAxMCU7XHJcbiAgICBtYXgtd2lkdGg6IDE1MCU7XHJcbiAgICBtaW4taGVpZ2h0OiAxMCU7XHJcbiAgICBtYXgtaGVpZ2h0OiAxNTAlO1xyXG4gICAgZ3JpZC1jb2x1bW46IDI7XHJcbiAgICBncmlkLXJvdzogMTtcclxuICB9XHJcblxyXG4gIC5jIHtcclxuICAgIG92ZXJmbG93OiBhdXRvO1xyXG4gICAgbWluLXdpZHRoOiAxMCU7XHJcbiAgICBtYXgtd2lkdGg6IDE1MCU7XHJcbiAgICBtaW4taGVpZ2h0OiAxMCU7XHJcbiAgICBtYXgtaGVpZ2h0OiAxNTAlO1xyXG4gICAgZ3JpZC1jb2x1bW46IDEgO1xyXG4gICAgZ3JpZC1yb3c6IDIgO1xyXG4gIH1cclxuICBcclxuICAuZCB7XHJcbiAgICBvdmVyZmxvdzogYXV0bztcclxuICAgIHJlc2l6ZTogdmVydGljYWw7XHJcbiAgICBtaW4td2lkdGg6IDEwJTtcclxuICAgIG1pbi1oZWlnaHQ6IDEwJTtcclxuICAgIG1heC1oZWlnaHQ6IDE1MCU7XHJcbiAgICBwYWRkaW5nOiAwcHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBncmlkLWNvbHVtbjogMztcclxuICAgIGdyaWQtcm93OiAxO1xyXG4gIH1cclxuXHJcbiAgLmQgaW5wdXQge1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgbWFyZ2luLXRvcDogMDtcclxuICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICBoZWlnaHQ6IDIwcHg7XHJcbiAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5lIHtcclxuICAgIG92ZXJmbG93OiBhdXRvO1xyXG4gICAgbWluLXdpZHRoOiAxMCU7XHJcbiAgICBtYXgtd2lkdGg6IDE1MCU7XHJcbiAgICBtaW4taGVpZ2h0OiAxMDAlO1xyXG4gICAgZ3JpZC1jb2x1bW46IDIgLyA0O1xyXG4gICAgZ3JpZC1yb3c6IDI7XHJcbiAgfVxyXG4gIFxyXG4gIC53ZWJwYWdlIHtcclxuICAgIGhlaWdodDogOTAlO1xyXG4gICAgd2lkdGg6IDk1JTtcclxuICB9XHJcblxyXG4gIC5iIDpnbG9iYWwoLmNoaWxkQ2xhc3MpIHtcclxuICAgIG92ZXJmbG93OiBzY3JvbGw7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG5cclxuICBpZnJhbWU6Zm9jdXMge1xyXG4gICAgb3V0bGluZTogbm9uZTtcclxuICB9XHJcblxyXG48L3N0eWxlPlxyXG4gIDxib2R5IGNsYXNzOm9yaWVudGF0aW9uPlxyXG4gIDxtYWluIGNsYXNzPVwid3JhcHBlclwiID5cclxuICAgIFxyXG4gICAgICA8ZGl2IGNsYXNzPVwiYm94IGEgdGFyZ2V0XCI+XHJcbiAgICAgICAgICA8RmlsZURpciAvPlxyXG4gICAgICA8L2Rpdj5cclxuICAgICAgPGRpdiBjbGFzcz1cImJveCBiXCI+XHJcbiAgICAgICAgICA8IS0tIHN2ZWx0ZS1pZ25vcmUgbWlzc2luZy1kZWNsYXJhdGlvbiAtLT5cclxuICAgICAgICAgIDxOZXdUYWJzIGNsYXNzPVwiY2hpbGRDbGFzc1wiIHt0YWJzfS8+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgICA8ZGl2IGNsYXNzPVwiYm94IGMgcm9vdFwiPlxyXG4gICAgICAgIDxTdGF0ZU1hbmFnZXIgLz5cclxuICAgICAgPC9kaXY+XHJcbiAgICAgIDxkaXYgY2xhc3M9XCJib3ggZCByb290XCI+IFxyXG4gICAgICAgIDxmb3JtIG9uOnN1Ym1pdHxwcmV2ZW50RGVmYXVsdD17aGFuZGxlU3VibWl0fT5cclxuICAgICAgICAgIDxpbnB1dCBwbGFjZWhvbGRlcj1cIkxvY2FsIEhvc3QgUG9ydFwiIHR5cGU9XCJ0ZXh0XCIgb246a2V5dXB8cHJldmVudERlZmF1bHQ9e2hhbmRsZUtleXVwfT5cclxuICAgICAgICA8L2Zvcm0+XHJcbiAgICAgICAgeyNpZiBzdWJtaXQgPT09IHRydWV9IFxyXG4gICAgICAgICAgPGlmcmFtZSAgY2xhc3M9XCJ3ZWJwYWdlXCIgdGl0bGU9XCJsb2NhbCBob3N0XCIgc3JjPXtsb2NhbGhvc3R9PjwvaWZyYW1lPlxyXG4gICAgICAgIHsvaWZ9XHJcbiAgICAgICAgICA8aWZyYW1lICBjbGFzcz1cIndlYnBhZ2VcIiB0aXRsZT1cImxvY2FsIGhvc3RcIiBzcmM9e2xvY2FsaG9zdH0+PC9pZnJhbWU+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIDxkaXYgY2xhc3M9XCJib3ggZVwiPiBcclxuICAgICAgICAgIDxYVGVybSAvPlxyXG4gICAgICA8L2Rpdj5cclxuXHJcbiAgPC9tYWluPlxyXG4gIDwvYm9keT5cclxuXHJcblxyXG5cclxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXNDRSxJQUFJLDRCQUFDLENBQUMsQUFDSixNQUFNLENBQUUsSUFBSSxDQUNaLEtBQUssQ0FBRSxJQUFJLEFBQ2IsQ0FBQyxBQUVELFFBQVEsNEJBQUMsQ0FBQyxBQUNOLE1BQU0sQ0FBRSxJQUFJLENBQ1osT0FBTyxDQUFFLElBQUksQ0FDYixNQUFNLENBQUUsR0FBRyxDQUFDLEtBQUssQ0FBQyxJQUFJLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUNuQyxRQUFRLENBQUUsR0FBRyxDQUNiLHFCQUFxQixDQUFFLFdBQVcsQ0FDbEMsa0JBQWtCLENBQUUsR0FBRyxDQUN2QixnQkFBZ0IsQ0FBRSxJQUFJLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUNwQyxLQUFLLENBQUUsSUFBSSxBQUNmLENBQUMsQUFFRCxJQUFJLDRCQUFDLENBQUMsQUFDSixnQkFBZ0IsQ0FBRSxJQUFJLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUNwQyxLQUFLLENBQUUsSUFBSSxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FDeEIsYUFBYSxDQUFFLEdBQUcsQ0FDbEIsT0FBTyxDQUFFLElBQUksQ0FDYixTQUFTLENBQUUsSUFBSSxBQUNqQixDQUFDLEFBRUQsRUFBRSw0QkFBQyxDQUFDLEFBQ0YsUUFBUSxDQUFFLElBQUksQ0FDZCxNQUFNLENBQUUsVUFBVSxDQUNsQixTQUFTLENBQUUsR0FBRyxDQUNkLFNBQVMsQ0FBRSxJQUFJLENBQ2YsVUFBVSxDQUFFLEdBQUcsQ0FDZixVQUFVLENBQUUsSUFBSSxDQUNoQixXQUFXLENBQUUsQ0FBQyxDQUFDLENBQ2YsUUFBUSxDQUFFLENBQUMsQUFDYixDQUFDLEFBRUQsRUFBRSw0QkFBQyxDQUFDLEFBQ0YsUUFBUSxDQUFFLE1BQU0sQ0FDaEIsU0FBUyxDQUFFLEdBQUcsQ0FDZCxTQUFTLENBQUUsSUFBSSxDQUNmLFVBQVUsQ0FBRSxHQUFHLENBQ2YsVUFBVSxDQUFFLElBQUksQ0FDaEIsV0FBVyxDQUFFLENBQUMsQ0FDZCxRQUFRLENBQUUsQ0FBQyxBQUNiLENBQUMsQUFFRCxFQUFFLDRCQUFDLENBQUMsQUFDRixRQUFRLENBQUUsSUFBSSxDQUNkLFNBQVMsQ0FBRSxHQUFHLENBQ2QsU0FBUyxDQUFFLElBQUksQ0FDZixVQUFVLENBQUUsR0FBRyxDQUNmLFVBQVUsQ0FBRSxJQUFJLENBQ2hCLFdBQVcsQ0FBRSxDQUFDLENBQUMsQ0FDZixRQUFRLENBQUUsQ0FBQyxDQUFDLEFBQ2QsQ0FBQyxBQUVELEVBQUUsNEJBQUMsQ0FBQyxBQUNGLFFBQVEsQ0FBRSxJQUFJLENBQ2QsTUFBTSxDQUFFLFFBQVEsQ0FDaEIsU0FBUyxDQUFFLEdBQUcsQ0FDZCxVQUFVLENBQUUsR0FBRyxDQUNmLFVBQVUsQ0FBRSxJQUFJLENBQ2hCLE9BQU8sQ0FBRSxHQUFHLENBQ1osVUFBVSxDQUFFLE1BQU0sQ0FDbEIsV0FBVyxDQUFFLENBQUMsQ0FDZCxRQUFRLENBQUUsQ0FBQyxBQUNiLENBQUMsQUFFRCxnQkFBRSxDQUFDLEtBQUssY0FBQyxDQUFDLEFBQ1IsTUFBTSxDQUFFLElBQUksQ0FDWixVQUFVLENBQUUsQ0FBQyxDQUNiLGFBQWEsQ0FBRSxDQUFDLENBQ2hCLE1BQU0sQ0FBRSxJQUFJLENBQ1osU0FBUyxDQUFFLElBQUksQUFDakIsQ0FBQyxBQUVELEVBQUUsNEJBQUMsQ0FBQyxBQUNGLFFBQVEsQ0FBRSxJQUFJLENBQ2QsU0FBUyxDQUFFLEdBQUcsQ0FDZCxTQUFTLENBQUUsSUFBSSxDQUNmLFVBQVUsQ0FBRSxJQUFJLENBQ2hCLFdBQVcsQ0FBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FDbEIsUUFBUSxDQUFFLENBQUMsQUFDYixDQUFDLEFBRUQsUUFBUSw0QkFBQyxDQUFDLEFBQ1IsTUFBTSxDQUFFLEdBQUcsQ0FDWCxLQUFLLENBQUUsR0FBRyxBQUNaLENBQUMsQUFFRCxnQkFBRSxDQUFDLEFBQVEsV0FBVyxBQUFFLENBQUMsQUFDdkIsUUFBUSxDQUFFLE1BQU0sQ0FDaEIsT0FBTyxDQUFFLElBQUksQ0FDYixNQUFNLENBQUUsSUFBSSxDQUNaLEtBQUssQ0FBRSxJQUFJLEFBQ2IsQ0FBQyxBQUVELGtDQUFNLE1BQU0sQUFBQyxDQUFDLEFBQ1osT0FBTyxDQUFFLElBQUksQUFDZixDQUFDIn0= */
.createMenuWrapper.svelte-5pfmz8{background-color:white;font-size:15px;width:100px;height:100px}.create-button.svelte-5pfmz8{width:90%;height:20px;text-align:center;margin-left:auto;margin-right:auto;display:block;margin-top:5px}.create-button.svelte-5pfmz8:hover{background-color:rgb(33, 37, 43);color:white;font-weight:550}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ3JlYXRlTWVudS5zdmVsdGUiLCJzb3VyY2VzIjpbIkNyZWF0ZU1lbnUuc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQ+XHJcbiAgZXhwb3J0IGxldCBmaWxlUGF0aDtcclxuICBpbXBvcnQgRGlyZWN0b3J5RGF0YSBmcm9tICcuLi9VdGlsaXRpZXMvRGlyZWN0b3J5U3RvcmUnO1xyXG4gIGNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKTtcclxuICBjb25zdCB1bnN1YiA9IERpcmVjdG9yeURhdGEuc3Vic2NyaWJlKGRhdGEgPT57XHJcbiAgfSk7XHJcblxyXG4gIGNvbnN0IHJlbmFtZUhhbmRsZXIgPSAoKSA9PiB7XHJcbiAgICBjb25zb2xlLmxvZygnUmVuYW1lIGhhbmRsZXIgaXMgY2xpY2tlZCEnKVxyXG4gICAgLy9zdG9yZS5yZW5hbWUgPSB0cnVlO1xyXG4gICAgRGlyZWN0b3J5RGF0YS51cGRhdGUoIGN1cnJlbnREYXRhID0+IHtcclxuICAgICAgICByZXR1cm4gey4uLmN1cnJlbnREYXRhLCByZW5hbWUgOnRydWV9O1xyXG4gICAgfSlcclxuICB9XHJcblxyXG4gIGNvbnN0IGRlbGV0ZUhhbmRsZXIgPSAoKSA9PiB7XHJcbiAgICBsZXQgc3RhdHMgPSBmcy5zdGF0U3luYyhmaWxlUGF0aCk7XHJcbiAgICBpZihzdGF0cy5pc0ZpbGUoKSl7XHJcbiAgICAgIGZzLnVubGlua1N5bmMoZmlsZVBhdGgpO1xyXG4gICAgfVxyXG5cclxuICAgIGlmKHN0YXRzLmlzRGlyZWN0b3J5KCkpIHtcclxuICAgICAgZnMucm1kaXIoZmlsZVBhdGgsIHsgcmVjdXJzaXZlOiB0cnVlIH0sIChlcnIpID0+IHtcclxuICAgICAgICBpZiAoZXJyKSB7XHJcbiAgICAgICAgICB0aHJvdyBlcnI7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgRGlyZWN0b3J5RGF0YS51cGRhdGUoIGN1cnJlbnREYXRhID0+IHtcclxuICAgICAgcmV0dXJuIHsuLi5jdXJyZW50RGF0YSwgZGVsZXRlRmlsZTp0cnVlfTsgICAgICAgIFxyXG4gICAgfSlcclxuICB9XHJcblxyXG48L3NjcmlwdD5cclxuXHJcbjwhLS0gU3ZlbHRlIC0tPlxyXG48ZGl2IGNsYXNzPWNyZWF0ZU1lbnVXcmFwcGVyPlxyXG4gIDxidXR0b24gY2xhc3M9Y3JlYXRlLWJ1dHRvbiBvbjpjbGljaz17cmVuYW1lSGFuZGxlcn0+UmVuYW1lPC9idXR0b24+XHJcbiAgPGJ1dHRvbiBjbGFzcz1jcmVhdGUtYnV0dG9uIG9uOmNsaWNrPXtkZWxldGVIYW5kbGVyfT5EZWxldGU8L2J1dHRvbj5cclxuPC9kaXY+XHJcblxyXG5cclxuXHJcblxyXG48IS0tIFN0eWxlIC0tPlxyXG48c3R5bGU+XHJcblxyXG4uY3JlYXRlTWVudVdyYXBwZXJ7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgZm9udC1zaXplOiAxNXB4O1xyXG4gIHdpZHRoOjEwMHB4O1xyXG4gIGhlaWdodDogMTAwcHg7XHJcbn1cclxuLmNyZWF0ZS1idXR0b24ge1xyXG4gIHdpZHRoOiA5MCU7XHJcbiAgaGVpZ2h0OiAyMHB4O1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBtYXJnaW4tbGVmdDogYXV0bztcclxuICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgbWFyZ2luLXRvcDogNXB4O1xyXG4gIC8qIGJvcmRlci1yYWRpdXM6IDEwcHg7ICovXHJcbn1cclxuXHJcbi5jcmVhdGUtYnV0dG9uOmhvdmVyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMzMsIDM3LCA0Myk7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIGZvbnQtd2VpZ2h0OiA1NTA7XHJcbn1cclxuPC9zdHlsZT5cclxuXHJcbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFnREEsZ0NBQWtCLENBQUMsQUFDakIsZ0JBQWdCLENBQUUsS0FBSyxDQUN2QixTQUFTLENBQUUsSUFBSSxDQUNmLE1BQU0sS0FBSyxDQUNYLE1BQU0sQ0FBRSxLQUFLLEFBQ2YsQ0FBQyxBQUNELGNBQWMsY0FBQyxDQUFDLEFBQ2QsS0FBSyxDQUFFLEdBQUcsQ0FDVixNQUFNLENBQUUsSUFBSSxDQUNaLFVBQVUsQ0FBRSxNQUFNLENBQ2xCLFdBQVcsQ0FBRSxJQUFJLENBQ2pCLFlBQVksQ0FBRSxJQUFJLENBQ2xCLE9BQU8sQ0FBRSxLQUFLLENBQ2QsVUFBVSxDQUFFLEdBQUcsQUFFakIsQ0FBQyxBQUVELDRCQUFjLE1BQU0sQUFBQyxDQUFDLEFBQ3BCLGdCQUFnQixDQUFFLElBQUksRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQ2pDLEtBQUssQ0FBRSxLQUFLLENBQ1osV0FBVyxDQUFFLEdBQUcsQUFDbEIsQ0FBQyJ9 */
.directoryContainer.svelte-2o9kud{max-height:50vh;overflow-y:scroll;display:flex;flex-direction:column;align-content:flex-start}.directoryContainer.svelte-2o9kud::-webkit-scrollbar{width:12px}.directoryContainer.svelte-2o9kud::-webkit-scrollbar-thumb:hover{background-color:#e28e2d;transition:background-color 2s ease-in-out}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
.liFolderClosed.svelte-1uqcs7o{font-size:15px;cursor:pointer;padding:0px 0 5px 25px;list-style:none;background-image:url("./img/folderClosed.svg");background-repeat:no-repeat;background-position:left;background-size:15px}.liFolderOpen.svelte-1uqcs7o{font-size:15px;cursor:pointer;display:flex;justify-content:flex-start;padding:10px 0 5px 25px;list-style:none;background-image:url('./img/folderOpen.svg');background-repeat:no-repeat;background-position:left;background-size:15px}.liFiles.svelte-1uqcs7o{font-size:15px;cursor:pointer;padding-left:25px;margin-left:20px;margin-top:1px;list-style:none;background-image:url('./img/document.png');background-repeat:no-repeat;background-position:left;background-size:15px}.directory.svelte-1uqcs7o{display:flex;flex-direction:column;align-items:flex-start}ul.svelte-1uqcs7o{padding-left:10px;margin:5px}input.svelte-1uqcs7o{background-color:white}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
.editor-body.svelte-1m9bhpf.svelte-1m9bhpf{width:100%;height:100vh;overflow:scroll}ul.svelte-1m9bhpf.svelte-1m9bhpf{display:flex;flex-direction:row;overflow:scroll;padding-left:0;margin-top:0;margin-bottom:0;list-style:none;border-bottom:1px solid #dee2e6;border-radius:5px}li.svelte-1m9bhpf.svelte-1m9bhpf{margin-bottom:-1px;background-color:black;color:#fff}.tab-span.svelte-1m9bhpf.svelte-1m9bhpf{border:1px solid transparent;border-top-left-radius:0.25rem;border-top-right-radius:0.25rem;display:flex;flex-direction:row;padding:0 1rem;cursor:pointer;font-size:1em}.tab-span.svelte-1m9bhpf.svelte-1m9bhpf:hover{border-color:#e9ecef #e9ecef #dee2e6}li.active.svelte-1m9bhpf>span.svelte-1m9bhpf{color:#495057;background-color:#fff;border-color:#dee2e6 #dee2e6 #fff}img.svelte-1m9bhpf.svelte-1m9bhpf{height:1em;background-color:inherit;margin-top:3px}.delete-button.svelte-1m9bhpf.svelte-1m9bhpf{margin-left:5px;border-right:black;border-left:black}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */

/*# sourceMappingURL=bundle.css.map */